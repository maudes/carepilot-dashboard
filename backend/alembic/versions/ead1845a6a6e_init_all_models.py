"""init all models

Revision ID: ead1845a6a6e
Revises: 
Create Date: 2025-08-22 10:41:13.267935

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ead1845a6a6e'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('daily_log',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('steps', sa.Integer(), nullable=True),
    sa.Column('medication', sa.Boolean(), nullable=True),
    sa.Column('meals_text', sa.Text(), nullable=True),
    sa.Column('appetite_level', sa.Integer(), nullable=True),
    sa.Column('bowel_status', sa.Text(), nullable=True),
    sa.Column('mood_rate', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('goal',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('goal_text', sa.Text(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('profile',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.Column('height_cm', sa.Float(), nullable=True),
    sa.Column('weight_kg', sa.Float(), nullable=True),
    sa.Column('body_fat_percent', sa.Float(), nullable=True),
    sa.Column('gender', sa.Enum('Male', 'Female', 'Other', name='genderenum', native_enum=False), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('vital_sign',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('systolic_bp', sa.Integer(), nullable=False),
    sa.Column('diastolic_bp', sa.Integer(), nullable=False),
    sa.Column('pre_glucose', sa.Integer(), nullable=True),
    sa.Column('post_glucose', sa.Integer(), nullable=True),
    sa.Column('heart_rate', sa.Integer(), nullable=False),
    sa.Column('temperature_celsius', sa.Float(), nullable=True),
    sa.Column('spo2', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('daily_record',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('record_date', sa.Date(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('vital_sign_id', sa.UUID(), nullable=False),
    sa.Column('daily_log_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['daily_log_id'], ['daily_log.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['vital_sign_id'], ['vital_sign.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('daily_log_id'),
    sa.UniqueConstraint('user_id', 'record_date', name='unique_user_daily_record'),
    sa.UniqueConstraint('vital_sign_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('daily_record')
    op.drop_table('vital_sign')
    op.drop_table('profile')
    op.drop_table('goal')
    op.drop_table('daily_log')
    op.drop_table('user')
    # ### end Alembic commands ###
